#!/bin/bash
# Usage: hub-issue-transfer [<SOURCE-REPO>] <ISSUE-NUMBER> <DESTINATION-REPO>
#
# Transfer issue identified by its number from source repository to the
# destination repository. If omitted, SOURCE-REPO defaults to the current
# repository.
#
# Author: @mislav
set -e

issue_nodeid() {
  hub api graphql "$@" -f query='
    query($issue: Int!, $owner: String = "{owner}", $repo: String = "{repo}") {
      repository(owner: $owner, name: $repo) {
        issue(number: $issue) {
          id
        }
      }
    }
  ' | jq -r '.data.repository.issue.id'
}

repository_nodeid() {
  hub api graphql "$@" -f query='
    query($owner: String!, $repo: String!) {
      repository(owner: $owner, name: $repo) {
        id
      }
    }
  ' | jq -r '.data.repository.id'
}

transfer() {
  hub api graphql "$@" -f query='
    mutation($issue: ID!, $repo: ID!) {
      transferIssue(input: {issueId: $issue, repositoryId: $repo}) {
        issue {
          url
        }
      }
    }
  ' | jq -r '.data.transferIssue.issue.url'
}

if [ "${1:-}" -gt 0 ] 2>/dev/null; then
  args=(-F issue="${1:-}")
  shift 1
else
  args=(-F issue="${2:-}" -f owner="${1%/*}" -f repo="${1#*/}")
  shift 2
fi

issue_id="$(issue_nodeid "${args[@]}")"
repo_id="$(repository_nodeid -f owner="${1%/*}" -f repo="${1#*/}")"

transfer -f issue="$issue_id" -f repo="$repo_id"
